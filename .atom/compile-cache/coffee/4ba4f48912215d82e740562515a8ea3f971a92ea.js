(function() {
  var findClosingIndex, ref, split;

  ref = require('../lib/utils'), findClosingIndex = ref.findClosingIndex, split = ref.split;

  describe('.split()', function() {
    var tests;
    tests = [['a,b,c', ['a', 'b', 'c']], ['a,b(),c', ['a', 'b()', 'c']], ['a,b(c)', ['a', 'b(c)']], ['a,(b, c)', ['a', '(b,c)']], ['a,(b, c())', ['a', '(b,c())']], ['a(b, c())', ['a(b,c())']], ['a,)(', ['a']], ['a(,', []], ['(,', []], ['(,(,(,)', []], ['a,(,', ['a']], ['a,((),', ['a']], ['a,()),', ['a', '()']]];
    return tests.forEach(function(arg) {
      var expected, source;
      source = arg[0], expected = arg[1];
      return it("splits " + (jasmine.pp(source)) + " as " + (jasmine.pp(expected)), function() {
        return expect(split(source)).toEqual(expected);
      });
    });
  });

  describe('.findClosingIndex()', function() {
    var tests;
    tests = [['a(', -1], ['a()', 2], ['a(((()', -1]];
    return tests.forEach(function(arg) {
      var expected, source;
      source = arg[0], expected = arg[1];
      return it("returs the index of the closing character", function() {
        return expect(findClosingIndex(source, 2, '(', ')')).toEqual(expected);
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL2hvbWUvZWRzYW5kb3JmLy5hdG9tL3BhY2thZ2VzL3BpZ21lbnRzL3NwZWMvdXRpbHMtc3BlYy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFBOztFQUFBLE1BQTRCLE9BQUEsQ0FBUSxjQUFSLENBQTVCLEVBQUMsdUNBQUQsRUFBbUI7O0VBRW5CLFFBQUEsQ0FBUyxVQUFULEVBQXFCLFNBQUE7QUFDbkIsUUFBQTtJQUFBLEtBQUEsR0FBUSxDQUNOLENBQUMsT0FBRCxFQUFVLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLENBQVYsQ0FETSxFQUVOLENBQUMsU0FBRCxFQUFZLENBQUMsR0FBRCxFQUFNLEtBQU4sRUFBYSxHQUFiLENBQVosQ0FGTSxFQUdOLENBQUMsUUFBRCxFQUFXLENBQUMsR0FBRCxFQUFNLE1BQU4sQ0FBWCxDQUhNLEVBSU4sQ0FBQyxVQUFELEVBQWEsQ0FBQyxHQUFELEVBQU0sT0FBTixDQUFiLENBSk0sRUFLTixDQUFDLFlBQUQsRUFBZSxDQUFDLEdBQUQsRUFBTSxTQUFOLENBQWYsQ0FMTSxFQU1OLENBQUMsV0FBRCxFQUFjLENBQUMsVUFBRCxDQUFkLENBTk0sRUFPTixDQUFDLE1BQUQsRUFBUyxDQUFDLEdBQUQsQ0FBVCxDQVBNLEVBUU4sQ0FBQyxLQUFELEVBQVEsRUFBUixDQVJNLEVBU04sQ0FBQyxJQUFELEVBQU8sRUFBUCxDQVRNLEVBVU4sQ0FBQyxTQUFELEVBQVksRUFBWixDQVZNLEVBV04sQ0FBQyxNQUFELEVBQVMsQ0FBQyxHQUFELENBQVQsQ0FYTSxFQVlOLENBQUMsUUFBRCxFQUFXLENBQUMsR0FBRCxDQUFYLENBWk0sRUFhTixDQUFDLFFBQUQsRUFBVyxDQUFDLEdBQUQsRUFBTSxJQUFOLENBQVgsQ0FiTTtXQWdCUixLQUFLLENBQUMsT0FBTixDQUFjLFNBQUMsR0FBRDtBQUNaLFVBQUE7TUFEYyxpQkFBUTthQUN0QixFQUFBLENBQUcsU0FBQSxHQUFTLENBQUMsT0FBTyxDQUFDLEVBQVIsQ0FBVyxNQUFYLENBQUQsQ0FBVCxHQUE0QixNQUE1QixHQUFpQyxDQUFDLE9BQU8sQ0FBQyxFQUFSLENBQVcsUUFBWCxDQUFELENBQXBDLEVBQTZELFNBQUE7ZUFDM0QsTUFBQSxDQUFPLEtBQUEsQ0FBTSxNQUFOLENBQVAsQ0FBcUIsQ0FBQyxPQUF0QixDQUE4QixRQUE5QjtNQUQyRCxDQUE3RDtJQURZLENBQWQ7RUFqQm1CLENBQXJCOztFQXFCQSxRQUFBLENBQVMscUJBQVQsRUFBZ0MsU0FBQTtBQUM5QixRQUFBO0lBQUEsS0FBQSxHQUFRLENBQ04sQ0FBQyxJQUFELEVBQU8sQ0FBQyxDQUFSLENBRE0sRUFFTixDQUFDLEtBQUQsRUFBUSxDQUFSLENBRk0sRUFHTixDQUFDLFFBQUQsRUFBVyxDQUFDLENBQVosQ0FITTtXQU1SLEtBQUssQ0FBQyxPQUFOLENBQWMsU0FBQyxHQUFEO0FBQ1osVUFBQTtNQURjLGlCQUFRO2FBQ3RCLEVBQUEsQ0FBRywyQ0FBSCxFQUFnRCxTQUFBO2VBQzlDLE1BQUEsQ0FBTyxnQkFBQSxDQUFpQixNQUFqQixFQUF5QixDQUF6QixFQUE0QixHQUE1QixFQUFpQyxHQUFqQyxDQUFQLENBQTZDLENBQUMsT0FBOUMsQ0FBc0QsUUFBdEQ7TUFEOEMsQ0FBaEQ7SUFEWSxDQUFkO0VBUDhCLENBQWhDO0FBdkJBIiwic291cmNlc0NvbnRlbnQiOlsie2ZpbmRDbG9zaW5nSW5kZXgsIHNwbGl0fSA9IHJlcXVpcmUgJy4uL2xpYi91dGlscydcblxuZGVzY3JpYmUgJy5zcGxpdCgpJywgLT5cbiAgdGVzdHMgPSBbXG4gICAgWydhLGIsYycsIFsnYScsICdiJywgJ2MnXV1cbiAgICBbJ2EsYigpLGMnLCBbJ2EnLCAnYigpJywgJ2MnXV1cbiAgICBbJ2EsYihjKScsIFsnYScsICdiKGMpJ11dXG4gICAgWydhLChiLCBjKScsIFsnYScsICcoYixjKSddXVxuICAgIFsnYSwoYiwgYygpKScsIFsnYScsICcoYixjKCkpJ11dXG4gICAgWydhKGIsIGMoKSknLCBbJ2EoYixjKCkpJ11dXG4gICAgWydhLCkoJywgWydhJ11dXG4gICAgWydhKCwnLCBbXV1cbiAgICBbJygsJywgW11dXG4gICAgWycoLCgsKCwpJywgW11dXG4gICAgWydhLCgsJywgWydhJ11dXG4gICAgWydhLCgoKSwnLCBbJ2EnXV1cbiAgICBbJ2EsKCkpLCcsIFsnYScsICcoKSddXVxuICBdXG5cbiAgdGVzdHMuZm9yRWFjaCAoW3NvdXJjZSwgZXhwZWN0ZWRdKSAtPlxuICAgIGl0IFwic3BsaXRzICN7amFzbWluZS5wcCBzb3VyY2V9IGFzICN7amFzbWluZS5wcChleHBlY3RlZCl9XCIsIC0+XG4gICAgICBleHBlY3Qoc3BsaXQoc291cmNlKSkudG9FcXVhbChleHBlY3RlZClcblxuZGVzY3JpYmUgJy5maW5kQ2xvc2luZ0luZGV4KCknLCAtPlxuICB0ZXN0cyA9IFtcbiAgICBbJ2EoJywgLTFdXG4gICAgWydhKCknLCAyXVxuICAgIFsnYSgoKCgpJywgLTFdXG4gIF1cblxuICB0ZXN0cy5mb3JFYWNoIChbc291cmNlLCBleHBlY3RlZF0pIC0+XG4gICAgaXQgXCJyZXR1cnMgdGhlIGluZGV4IG9mIHRoZSBjbG9zaW5nIGNoYXJhY3RlclwiLCAtPlxuICAgICAgZXhwZWN0KGZpbmRDbG9zaW5nSW5kZXgoc291cmNlLCAyLCAnKCcsICcpJykpLnRvRXF1YWwoZXhwZWN0ZWQpXG4iXX0=
